@page "/perfil"
@inject NavigationManager NavigationManager
@inject IUsuarioService UsuarioService
@inject IJSRuntime JS
@using DTO.ControleAcessos 
@using DTO.Pedidos
@using UseCases.ControleAcessos

<div class="max-w-4xl mx-auto px-4 py-8">
    <!-- Cabeçalho -->
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold text-gray-800 dark:text-blue">Meu Perfil</h1>
        
        <!-- Switch Modo Escuro -->
        <label class="flex items-center cursor-pointer">
            <div class="relative">
                <input type="checkbox" class="sr-only" @bind="ModoEscuro" />
                <div class="block bg-gray-600 w-14 h-8 rounded-full"></div>
                <div class="dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition transform @(ModoEscuro ? "translate-x-6 bg-blue-500" : "")"></div>
            </div>
            <div class="ml-3 text-gray-700 dark:text-gray-300 font-medium">
                Modo Escuro
            </div>
        </label>
    </div>

    <!-- Card de Perfil -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
        <div class="p-6">
            <div class="flex flex-col md:flex-row gap-6">
                <!-- Informações -->
                <div class="flex-grow">
                    <h2 class="text-2xl font-bold text-gray-800 dark:text-white">Nome: @Usuario?.Nome</h2>  
                    <p class="text-gray-600 dark:text-gray-300">Email: @Usuario?.Email</p>
                </div>
            </div>

            <!-- Botões -->
            <div class="mt-8 flex flex-wrap gap-4">
                <button class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                    Editar Perfil
                </button>
                <button @onclick="Logout" 
                        class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
                    Sair da Conta
                </button>
            </div>
        </div>
    </div>

    <!-- Histórico de Pedidos -->
    <div class="mt-8">
        <h2 class="text-2xl font-bold text-gray-800 dark:text-white mb-4">Meus Pedidos</h2>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-700">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Nº Pedido</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Data</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Valor</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Status</th>
                    </tr>
                </thead>
                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                    @foreach (var pedido in Pedidos){
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800 dark:text-white">@pedido.Numero</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800 dark:text-white">@pedido.Data.ToShortDateString()</td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800 dark:text-white">@pedido.Valor.ToString("C")</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                      @(pedido.Status == "Entregue" ? "bg-green-100 text-green-800" : 
                                        pedido.Status == "Cancelado" ? "bg-red-100 text-red-800" : 
                                        "bg-yellow-100 text-yellow-800")">
                                    @pedido.Status
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    private UsuarioDTO? Usuario;
    private bool ModoEscuro { get; set; } = false;
    private List<PedidoDTO> Pedidos = new();

    protected override async Task OnInitializedAsync()
    {
        Usuario = await UsuarioService.ObterUsuarioLogadoAsync();
        Pedidos = await UsuarioService.ObterPedidosUsuarioAsync();
    }

    private void Logout()
    {
        JS.InvokeVoidAsync("localStorage.removeItem", "token");
        JS.InvokeVoidAsync("localStorage.removeItem", "user");
        NavigationManager.NavigateTo("/login", true);
    }

}
